<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.mybatis.mapper.TStudentMapper">
  <resultMap id="BaseResultMap" type="springboot.mybatis.po.TStudent">
    <id property="id" column="id"/>
    <result property="studentNo" column="student_no"/>
    <result property="studentName" column="student_name"/>
    <result property="age" column="age"/>
    <result property="sex" column="sex"/>
    <result property="stature" column="stature"/>
    <result property="weight" column="weight"/>
    <result property="bmi" column="bmi"/>
    <result property="createTime" column="create_time"/>
    <result property="updateTime" column="update_time"/>
    <result property="medical" column="medical"/>
    <result property="phoneNo" column="phone_no"/>
  </resultMap>

  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">

    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_no, student_name, age, sex, stature, weight, bmi, create_time, update_time, medical, phone_no
  </sql>


  <select id="selectByExample" parameterType="springboot.mybatis.po.TStudentExample" resultMap="BaseResultMap">

    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--查询所有学生信息列表-->
  <select id="selectStudent" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_student
  </select>


  <!--根据学号查询学生信息-->
  <select id="selectByStudentNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_student where student_no=#{studentNo,jdbcType=VARCHAR} limit 1
  </select>

  <!-- 根据姓名或学号模糊查询学生信息 -->
  <select id="selectByNameStudentNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    s.id, s.student_no, s.student_name, s.age, s.sex, s.stature, s.weight, s.bmi,
    s.create_time, s.update_time, s.medical, s.phone_no
    from t_student s,
    (select id from t_student where student_no like CONCAT('%',#{NameStudentNo},'%')
    or student_name like CONCAT('%',#{NameStudentNo,jdbcType=VARCHAR},'%')) ss
    where s.id=ss.id
  </select>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_student
    where id = #{id}
  </delete>

  <delete id="deleteByExample" parameterType="springboot.mybatis.po.TStudentExample">
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="springboot.mybatis.po.TStudent">
    insert into t_student (id, student_no, student_name, 
      age, sex, stature, weight, bmi, create_time,
      update_time, medical, phone_no)
    values (#{id,jdbcType=VARCHAR}, #{studentNo,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{stature,jdbcType=DOUBLE}, #{weight,jdbcType=DOUBLE},
      #{bmi,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{medical,jdbcType=VARCHAR}, #{phoneNo,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="springboot.mybatis.po.TStudent">
   <!--自动生成uuid-->
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentNo != null">
        student_no,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="stature != null">
        stature,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="bmi != null">
        bmi,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="medical != null">
        medical,
      </if>
      <if test="phoneNo != null">
        phone_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="studentNo != null">
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="stature != null">
        #{stature,jdbcType=DOUBLE},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="bmi != null">
        #{bmi,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="medical != null">
        #{medical,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        #{phoneNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="springboot.mybatis.po.TStudentExample" resultType="java.lang.Integer">
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update t_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNo != null">
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.stature != null">
        stature = #{record.stature,jdbcType=DOUBLE},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.bmi != null">
        bmi = #{record.bmi,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.medical != null">
        medical = #{record.medical,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNo != null">
        phone_no = #{record.phoneNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update t_student
    set id = #{record.id,jdbcType=VARCHAR},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      stature = #{record.stature,jdbcType=DOUBLE},
      weight = #{record.weight,jdbcType=DOUBLE},
      bmi = #{record.bmi,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      medical = #{record.medical,jdbcType=VARCHAR},
      phone_no = #{record.phoneNo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 修改学生信息 -->
  <update id="updateByPrimaryKeySelective" parameterType="springboot.mybatis.po.TStudent">
    update t_student
    <set>
      <if test="studentNo != null">
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="stature != null">
        stature = #{stature,jdbcType=DOUBLE},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="bmi != null">
        bmi = #{bmi,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="medical != null">
        medical = #{medical,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        phone_no = #{phoneNo,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByStudentNO" parameterType="springboot.mybatis.po.TStudent">
    update t_student
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="stature != null">
        stature = #{stature,jdbcType=DOUBLE},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="bmi != null">
        bmi = #{bmi,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="medical != null">
        medical = #{medical,jdbcType=VARCHAR},
      </if>
      <if test="phoneNo != null">
        phone_no = #{phoneNo,jdbcType=INTEGER},
      </if>
    </set>
    where student_no = #{studentNo,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="springboot.mybatis.po.TStudent">

    update t_student
    set student_no = #{studentNo,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      stature = #{stature,jdbcType=DOUBLE},
      weight = #{weight,jdbcType=DOUBLE},
      bmi = #{bmi,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      medical = #{medical,jdbcType=VARCHAR},
      phone_no = #{phoneNo,jdbcType=INTEGER},
    where id = #{id}
  </update>
</mapper>